{"ast":null,"code":"var _jsxFileName = \"C:\\\\praka\\\\www\\\\media\\\\src\\\\stores\\\\root.store.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useContext } from 'react';\nimport { AuthStore } from './auth.store';\nimport { UsersStore } from './users.store';\nimport { PostsStore } from './posts.store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass RootStore {\n  constructor() {\n    this.auth = new AuthStore();\n    this.users = new UsersStore();\n    this.posts = new PostsStore(this.auth);\n  }\n}\nconst RootStoreContext = /*#__PURE__*/createContext(null);\nconst root = new RootStore();\nexport const RootStoreProvider = ({\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(RootStoreContext.Provider, {\n    value: root,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = RootStoreProvider;\nexport const useRootStore = () => {\n  _s();\n  const ctx = useContext(RootStoreContext);\n  if (!ctx) throw new Error('RootStoreProvider is missing');\n  return ctx;\n};\n_s(useRootStore, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\nvar _c;\n$RefreshReg$(_c, \"RootStoreProvider\");","map":{"version":3,"names":["React","createContext","useContext","AuthStore","UsersStore","PostsStore","jsxDEV","_jsxDEV","RootStore","constructor","auth","users","posts","RootStoreContext","root","RootStoreProvider","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useRootStore","_s","ctx","Error","$RefreshReg$"],"sources":["C:/praka/www/media/src/stores/root.store.tsx"],"sourcesContent":["import React, { createContext, useContext } from 'react'\r\nimport { AuthStore } from './auth.store'\r\nimport { UsersStore } from './users.store'\r\nimport { PostsStore } from './posts.store'\r\n\r\nclass RootStore {\r\n  auth = new AuthStore()\r\n  users = new UsersStore()\r\n  posts = new PostsStore(this.auth)\r\n}\r\n\r\nconst RootStoreContext = createContext<RootStore | null>(null)\r\nconst root = new RootStore()\r\n\r\nexport const RootStoreProvider: React.FC<React.PropsWithChildren> = ({ children }) => {\r\n  return (\r\n    <RootStoreContext.Provider value={root}>{children}</RootStoreContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useRootStore = () => {\r\n  const ctx = useContext(RootStoreContext)\r\n  if (!ctx) throw new Error('RootStoreProvider is missing')\r\n  return ctx\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACxD,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,SAAS,CAAC;EAAAC,YAAA;IAAA,KACdC,IAAI,GAAG,IAAIP,SAAS,CAAC,CAAC;IAAA,KACtBQ,KAAK,GAAG,IAAIP,UAAU,CAAC,CAAC;IAAA,KACxBQ,KAAK,GAAG,IAAIP,UAAU,CAAC,IAAI,CAACK,IAAI,CAAC;EAAA;AACnC;AAEA,MAAMG,gBAAgB,gBAAGZ,aAAa,CAAmB,IAAI,CAAC;AAC9D,MAAMa,IAAI,GAAG,IAAIN,SAAS,CAAC,CAAC;AAE5B,OAAO,MAAMO,iBAAoD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACpF,oBACET,OAAA,CAACM,gBAAgB,CAACI,QAAQ;IAACC,KAAK,EAAEJ,IAAK;IAAAE,QAAA,EAAEA;EAAQ;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAA4B,CAAC;AAElF,CAAC;AAAAC,EAAA,GAJYR,iBAAoD;AAMjE,OAAO,MAAMS,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAMC,GAAG,GAAGxB,UAAU,CAACW,gBAAgB,CAAC;EACxC,IAAI,CAACa,GAAG,EAAE,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;EACzD,OAAOD,GAAG;AACZ,CAAC;AAAAD,EAAA,CAJYD,YAAY;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}