{"ast":null,"code":"import axios from 'axios';\nconst http = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL\n});\nconsole.log('[API baseURL]', http.defaults.baseURL);\nhttp.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    var _config$headers;\n    config.headers = (_config$headers = config.headers) !== null && _config$headers !== void 0 ? _config$headers : {};\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nhttp.interceptors.response.use(r => r, err => {\n  var _err$response;\n  if ((err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  }\n  return Promise.reject(err);\n});\n\n// Универсальный POST с перебором маршрутов, если где-то 404\nexport async function postFallback(paths, body) {\n  var _lastErr;\n  let lastErr = null;\n  for (const p of paths) {\n    try {\n      return await http.post(p, body);\n    } catch (e) {\n      var _e$response;\n      const code = e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : _e$response.status;\n      if (code && code !== 404) throw e; // маршрут есть, но другая ошибка\n      lastErr = e;\n    }\n  }\n  throw (_lastErr = lastErr) !== null && _lastErr !== void 0 ? _lastErr : new Error('No matching endpoint from list');\n}\nexport default http;","map":{"version":3,"names":["axios","http","create","baseURL","process","env","REACT_APP_API_BASE_URL","console","log","defaults","interceptors","request","use","config","token","localStorage","getItem","_config$headers","headers","Authorization","response","r","err","_err$response","status","removeItem","Promise","reject","postFallback","paths","body","_lastErr","lastErr","p","post","e","_e$response","code","Error"],"sources":["C:/praka/www/media/src/api/http.ts"],"sourcesContent":["import axios from 'axios'\r\n\r\nconst http = axios.create({\r\n  baseURL: process.env.REACT_APP_API_BASE_URL\r\n})\r\n\r\nconsole.log('[API baseURL]', http.defaults.baseURL)\r\n\r\nhttp.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token')\r\n  if (token) {\r\n    config.headers = config.headers ?? {}\r\n    config.headers.Authorization = `Bearer ${token}`\r\n  }\r\n  return config\r\n})\r\n\r\nhttp.interceptors.response.use(\r\n  (r) => r,\r\n  (err) => {\r\n    if (err?.response?.status === 401) {\r\n      localStorage.removeItem('token')\r\n      localStorage.removeItem('user')\r\n    }\r\n    return Promise.reject(err)\r\n  }\r\n)\r\n\r\n// Универсальный POST с перебором маршрутов, если где-то 404\r\nexport async function postFallback<T = any>(paths: string[], body: any) {\r\n  let lastErr: any = null\r\n  for (const p of paths) {\r\n    try {\r\n      return await http.post<T>(p, body)\r\n    } catch (e: any) {\r\n      const code = e?.response?.status\r\n      if (code && code !== 404) throw e // маршрут есть, но другая ошибка\r\n      lastErr = e\r\n    }\r\n  }\r\n  throw lastErr ?? new Error('No matching endpoint from list')\r\n}\r\n\r\nexport default http\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAAC;EACxBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC;AACvB,CAAC,CAAC;AAEFC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEP,IAAI,CAACQ,QAAQ,CAACN,OAAO,CAAC;AAEnDF,IAAI,CAACS,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACxC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IAAA,IAAAG,eAAA;IACTJ,MAAM,CAACK,OAAO,IAAAD,eAAA,GAAGJ,MAAM,CAACK,OAAO,cAAAD,eAAA,cAAAA,eAAA,GAAI,CAAC,CAAC;IACrCJ,MAAM,CAACK,OAAO,CAACC,aAAa,GAAG,UAAUL,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEFZ,IAAI,CAACS,YAAY,CAACU,QAAQ,CAACR,GAAG,CAC3BS,CAAC,IAAKA,CAAC,EACPC,GAAG,IAAK;EAAA,IAAAC,aAAA;EACP,IAAI,CAAAD,GAAG,aAAHA,GAAG,wBAAAC,aAAA,GAAHD,GAAG,CAAEF,QAAQ,cAAAG,aAAA,uBAAbA,aAAA,CAAeC,MAAM,MAAK,GAAG,EAAE;IACjCT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;IAChCV,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC;EACjC;EACA,OAAOC,OAAO,CAACC,MAAM,CAACL,GAAG,CAAC;AAC5B,CACF,CAAC;;AAED;AACA,OAAO,eAAeM,YAAYA,CAAUC,KAAe,EAAEC,IAAS,EAAE;EAAA,IAAAC,QAAA;EACtE,IAAIC,OAAY,GAAG,IAAI;EACvB,KAAK,MAAMC,CAAC,IAAIJ,KAAK,EAAE;IACrB,IAAI;MACF,OAAO,MAAM5B,IAAI,CAACiC,IAAI,CAAID,CAAC,EAAEH,IAAI,CAAC;IACpC,CAAC,CAAC,OAAOK,CAAM,EAAE;MAAA,IAAAC,WAAA;MACf,MAAMC,IAAI,GAAGF,CAAC,aAADA,CAAC,wBAAAC,WAAA,GAADD,CAAC,CAAEf,QAAQ,cAAAgB,WAAA,uBAAXA,WAAA,CAAaZ,MAAM;MAChC,IAAIa,IAAI,IAAIA,IAAI,KAAK,GAAG,EAAE,MAAMF,CAAC,EAAC;MAClCH,OAAO,GAAGG,CAAC;IACb;EACF;EACA,OAAAJ,QAAA,GAAMC,OAAO,cAAAD,QAAA,cAAAA,QAAA,GAAI,IAAIO,KAAK,CAAC,gCAAgC,CAAC;AAC9D;AAEA,eAAerC,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}