{"ast":null,"code":"import { makeAutoObservable, runInAction } from 'mobx';\nimport http from '../api/http';\nexport class AuthStore {\n  constructor() {\n    this.user = null;\n    this.token = null;\n    this.isLoading = false;\n    this.initializing = true;\n    this.error = null;\n    makeAutoObservable(this);\n    this.hydrate();\n  }\n  get isAuthenticated() {\n    return !!this.token && !!this.user;\n  }\n  get isAdmin() {\n    var _this$user;\n    const r = (_this$user = this.user) === null || _this$user === void 0 ? void 0 : _this$user.role;\n    return typeof r === 'string' && r.toLowerCase().trim() === 'admin';\n  }\n\n  // ✅ безопасная инициализация из localStorage + авто-запрос профиля при наличии токена\n  hydrate() {\n    const token = localStorage.getItem('token');\n    const raw = localStorage.getItem('user');\n    this.token = token !== null && token !== void 0 ? token : null;\n    if (raw && raw !== 'undefined' && raw !== 'null') {\n      try {\n        this.user = JSON.parse(raw);\n      } catch {\n        localStorage.removeItem('user');\n        this.user = null;\n      }\n    } else {\n      if (raw) localStorage.removeItem('user');\n      this.user = null;\n    }\n    this.initializing = false;\n\n    // если токен есть, а user пуст — подтянуть профиль с /auth_me\n    if (this.token && !this.user) {\n      this.fetchMe().then(u => {\n        if (u) {\n          runInAction(() => {\n            this.user = u;\n            localStorage.setItem('user', JSON.stringify(u));\n          });\n        }\n      }).catch(() => {});\n    }\n  }\n\n  // ✅ ЛОГИН ЧЕРЕЗ POST /auth (строго твой маршрут)\n  async login(dto) {\n    this.isLoading = true;\n    this.error = null;\n    try {\n      var _ref, _data$token, _ref2, _data$user, _user;\n      const {\n        data\n      } = await http.post('/auth', dto);\n\n      // токен может называться по-разному — подстрахуемся\n      const token = (_ref = (_data$token = data === null || data === void 0 ? void 0 : data.token) !== null && _data$token !== void 0 ? _data$token : data === null || data === void 0 ? void 0 : data.accessToken) !== null && _ref !== void 0 ? _ref : data === null || data === void 0 ? void 0 : data.jwt;\n      if (!token) throw new Error('Сервер не вернул токен');\n      runInAction(() => {\n        this.token = token;\n        localStorage.setItem('token', token);\n      });\n\n      // если сервер сразу не отдал пользователя — добираем через /auth_me\n      let user = (_ref2 = (_data$user = data === null || data === void 0 ? void 0 : data.user) !== null && _data$user !== void 0 ? _data$user : data === null || data === void 0 ? void 0 : data.profile) !== null && _ref2 !== void 0 ? _ref2 : null;\n      if (!user) {\n        user = await this.fetchMe();\n      }\n\n      // защита: заблокированного пользователя не пускаем\n      if ((_user = user) !== null && _user !== void 0 && _user.isBlocked) {\n        this.logout();\n        throw new Error('Пользователь заблокирован');\n      }\n      runInAction(() => {\n        var _user2;\n        this.user = (_user2 = user) !== null && _user2 !== void 0 ? _user2 : null;\n        if (user) localStorage.setItem('user', JSON.stringify(user));else localStorage.removeItem('user');\n      });\n    } catch (e) {\n      runInAction(() => {\n        var _e$response, _e$response$data;\n        this.error = (e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message) || (e === null || e === void 0 ? void 0 : e.message) || 'Ошибка входа';\n      });\n      throw e;\n    } finally {\n      runInAction(() => this.isLoading = false);\n    }\n  }\n\n  // ✅ ПРОФИЛЬ ЧЕРЕЗ GET /auth_me (строго твой маршрут)\n  async fetchMe() {\n    try {\n      var _data$user2;\n      const {\n        data\n      } = await http.get('/auth_me');\n      // иногда возвращают { user: {...} }, иногда сразу объект\n      const user = (_data$user2 = data === null || data === void 0 ? void 0 : data.user) !== null && _data$user2 !== void 0 ? _data$user2 : data;\n      return user && user.id != null ? user : null;\n    } catch (e) {\n      var _e$response2;\n      const code = e === null || e === void 0 ? void 0 : (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : _e$response2.status;\n      // если 401 — токен плохой → подчистим\n      if (code === 401) {\n        this.logout();\n      }\n      return null;\n    }\n  }\n  async register(dto) {\n    this.isLoading = true;\n    this.error = null;\n    try {\n      const {\n        data\n      } = await http.post('/register', dto);\n      runInAction(() => {\n        this.token = data.token;\n        this.user = data.user;\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('user', JSON.stringify(data.user));\n      });\n    } catch (e) {\n      runInAction(() => {\n        var _e$response3, _e$response3$data;\n        this.error = (e === null || e === void 0 ? void 0 : (_e$response3 = e.response) === null || _e$response3 === void 0 ? void 0 : (_e$response3$data = _e$response3.data) === null || _e$response3$data === void 0 ? void 0 : _e$response3$data.message) || 'Ошибка регистрации';\n      });\n      throw e;\n    } finally {\n      runInAction(() => this.isLoading = false);\n    }\n  }\n  logout() {\n    this.token = null;\n    this.user = null;\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  }\n}","map":{"version":3,"names":["makeAutoObservable","runInAction","http","AuthStore","constructor","user","token","isLoading","initializing","error","hydrate","isAuthenticated","isAdmin","_this$user","r","role","toLowerCase","trim","localStorage","getItem","raw","JSON","parse","removeItem","fetchMe","then","u","setItem","stringify","catch","login","dto","_ref","_data$token","_ref2","_data$user","_user","data","post","accessToken","jwt","Error","profile","isBlocked","logout","_user2","e","_e$response","_e$response$data","response","message","_data$user2","get","id","_e$response2","code","status","register","_e$response3","_e$response3$data"],"sources":["C:/praka/www/media/src/stores/auth.store.ts"],"sourcesContent":["import { makeAutoObservable, runInAction } from 'mobx'\r\nimport http from '../api/http'\r\nimport type { CredentialsDTO, RegisterDTO, User } from '../types'\r\n\r\nexport class AuthStore {\r\n  user: User | null = null\r\n  token: string | null = null\r\n  isLoading = false\r\n  initializing = true\r\n  error: string | null = null\r\n\r\n  constructor() {\r\n    makeAutoObservable(this)\r\n    this.hydrate()\r\n  }\r\n\r\n  get isAuthenticated() { return !!this.token && !!this.user }\r\n  get isAdmin() {\r\n    const r = this.user?.role\r\n    return typeof r === 'string' && r.toLowerCase().trim() === 'admin'\r\n  }\r\n\r\n  // ✅ безопасная инициализация из localStorage + авто-запрос профиля при наличии токена\r\n  hydrate() {\r\n    const token = localStorage.getItem('token')\r\n    const raw = localStorage.getItem('user')\r\n\r\n    this.token = token ?? null\r\n\r\n    if (raw && raw !== 'undefined' && raw !== 'null') {\r\n      try { this.user = JSON.parse(raw) }\r\n      catch { localStorage.removeItem('user'); this.user = null }\r\n    } else {\r\n      if (raw) localStorage.removeItem('user')\r\n      this.user = null\r\n    }\r\n\r\n    this.initializing = false\r\n\r\n    // если токен есть, а user пуст — подтянуть профиль с /auth_me\r\n    if (this.token && !this.user) {\r\n      this.fetchMe().then(u => {\r\n        if (u) {\r\n          runInAction(() => {\r\n            this.user = u\r\n            localStorage.setItem('user', JSON.stringify(u))\r\n          })\r\n        }\r\n      }).catch(() => {})\r\n    }\r\n  }\r\n\r\n  // ✅ ЛОГИН ЧЕРЕЗ POST /auth (строго твой маршрут)\r\n  async login(dto: CredentialsDTO) {\r\n    this.isLoading = true\r\n    this.error = null\r\n    try {\r\n      const { data } = await http.post<any>('/auth', dto)\r\n\r\n      // токен может называться по-разному — подстрахуемся\r\n      const token: string | undefined = data?.token ?? data?.accessToken ?? data?.jwt\r\n      if (!token) throw new Error('Сервер не вернул токен')\r\n\r\n      runInAction(() => {\r\n        this.token = token\r\n        localStorage.setItem('token', token)\r\n      })\r\n\r\n      // если сервер сразу не отдал пользователя — добираем через /auth_me\r\n      let user: User | null | undefined = data?.user ?? data?.profile ?? null\r\n      if (!user) {\r\n        user = await this.fetchMe()\r\n      }\r\n\r\n      // защита: заблокированного пользователя не пускаем\r\n      if (user?.isBlocked) {\r\n        this.logout()\r\n        throw new Error('Пользователь заблокирован')\r\n      }\r\n\r\n      runInAction(() => {\r\n        this.user = user ?? null\r\n        if (user) localStorage.setItem('user', JSON.stringify(user))\r\n        else localStorage.removeItem('user')\r\n      })\r\n    } catch (e: any) {\r\n      runInAction(() => {\r\n        this.error = e?.response?.data?.message || e?.message || 'Ошибка входа'\r\n      })\r\n      throw e\r\n    } finally {\r\n      runInAction(() => (this.isLoading = false))\r\n    }\r\n  }\r\n\r\n  // ✅ ПРОФИЛЬ ЧЕРЕЗ GET /auth_me (строго твой маршрут)\r\n  async fetchMe(): Promise<User | null> {\r\n    try {\r\n      const { data } = await http.get<any>('/auth_me')\r\n      // иногда возвращают { user: {...} }, иногда сразу объект\r\n      const user: User = data?.user ?? data\r\n      return (user && user.id != null) ? user : null\r\n    } catch (e: any) {\r\n      const code = e?.response?.status\r\n      // если 401 — токен плохой → подчистим\r\n      if (code === 401) {\r\n        this.logout()\r\n      }\r\n      return null\r\n    }\r\n  }\r\n\r\n  async register(dto: RegisterDTO) {\r\n    this.isLoading = true\r\n    this.error = null\r\n    try {\r\n      const { data } = await http.post<{ token: string; user: User }>('/register', dto)\r\n      runInAction(() => {\r\n        this.token = data.token\r\n        this.user = data.user\r\n        localStorage.setItem('token', data.token)\r\n        localStorage.setItem('user', JSON.stringify(data.user))\r\n      })\r\n    } catch (e: any) {\r\n      runInAction(() => {\r\n        this.error = e?.response?.data?.message || 'Ошибка регистрации'\r\n      })\r\n      throw e\r\n    } finally {\r\n      runInAction(() => (this.isLoading = false))\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.token = null\r\n    this.user = null\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('user')\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}