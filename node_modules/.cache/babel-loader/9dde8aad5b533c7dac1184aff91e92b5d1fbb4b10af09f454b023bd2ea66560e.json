{"ast":null,"code":"var _jsxFileName = \"C:\\\\praka\\\\www\\\\media\\\\src\\\\components\\\\post\\\\PostForm.tsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { useRootStore } from '../../stores/root.store';\nimport { Alert, Box, Button, Stack, TextField, Typography } from '@mui/material';\nimport Loader from '../loader/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostForm = _s(observer(_c = _s(() => {\n  var _auth$user2;\n  _s();\n  const {\n    posts,\n    auth\n  } = useRootStore();\n  const [description, setDescription] = useState('');\n  const [imageUrl, setImageUrl] = useState(undefined);\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState(null);\n  const inputRef = useRef(null);\n  const pickFile = () => {\n    var _inputRef$current;\n    return (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.click();\n  };\n  const onFile = e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = () => setImageUrl(reader.result);\n    reader.readAsDataURL(file);\n  };\n  const onSubmit = async e => {\n    var _auth$user;\n    e.preventDefault();\n    if (!auth.isAuthenticated) return;\n    if ((_auth$user = auth.user) !== null && _auth$user !== void 0 && _auth$user.isBlocked) {\n      setError('Ваш аккаунт заблокирован');\n      return;\n    }\n    setSaving(true);\n    setError(null);\n    try {\n      await posts.createPost({\n        description,\n        imageUrl\n      });\n      setDescription('');\n      setImageUrl(undefined);\n    } catch (e) {\n      var _e$response, _e$response$data;\n      setError((e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message) || (e === null || e === void 0 ? void 0 : e.message) || 'Не удалось создать пост');\n    } finally {\n      setSaving(false);\n    }\n  };\n  if (!auth.isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      children: \"\\u0427\\u0442\\u043E\\u0431\\u044B \\u0441\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u043E\\u0441\\u0442, \\u0432\\u043E\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0432 \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    onSubmit: onSubmit,\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 1.5,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        multiline: true,\n        minRows: 2,\n        placeholder: \"\\u041F\\u043E\\u0434\\u0435\\u043B\\u0438\\u0442\\u0435\\u0441\\u044C \\u0447\\u0435\\u043C-\\u043D\\u0438\\u0431\\u0443\\u0434\\u044C...\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: \"preview\",\n        style: {\n          maxWidth: '100%',\n          borderRadius: 12\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: inputRef,\n          type: \"file\",\n          accept: \"image/*\",\n          hidden: true,\n          onChange: onFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: pickFile,\n          children: \"\\u0424\\u043E\\u0442\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          disabled: saving || !description.trim(),\n          children: saving ? /*#__PURE__*/_jsxDEV(Loader, {\n            inline: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 23\n          }, this) : 'Опубликовать'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }, this), ((_auth$user2 = auth.user) === null || _auth$user2 === void 0 ? void 0 : _auth$user2.isBlocked) && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: \"\\u0412\\u0430\\u0448 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442 \\u0437\\u0430\\u0431\\u043B\\u043E\\u043A\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D, \\u043F\\u0443\\u0431\\u043B\\u0438\\u043A\\u0430\\u0446\\u0438\\u044F \\u043D\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u0430.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}, \"Kn9vDkkFjYwcmZDaG/kARLD2uGU=\", false, function () {\n  return [useRootStore];\n})), \"Kn9vDkkFjYwcmZDaG/kARLD2uGU=\", false, function () {\n  return [useRootStore];\n});\n_c2 = PostForm;\nexport default PostForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"PostForm$observer\");\n$RefreshReg$(_c2, \"PostForm\");","map":{"version":3,"names":["useRef","useState","observer","useRootStore","Alert","Box","Button","Stack","TextField","Typography","Loader","jsxDEV","_jsxDEV","PostForm","_s","_c","_auth$user2","posts","auth","description","setDescription","imageUrl","setImageUrl","undefined","saving","setSaving","error","setError","inputRef","pickFile","_inputRef$current","current","click","onFile","e","_e$target$files","file","target","files","reader","FileReader","onload","result","readAsDataURL","onSubmit","_auth$user","preventDefault","isAuthenticated","user","isBlocked","createPost","_e$response","_e$response$data","response","data","message","severity","children","fileName","_jsxFileName","lineNumber","columnNumber","component","spacing","multiline","minRows","placeholder","value","onChange","required","src","alt","style","maxWidth","borderRadius","direction","ref","type","accept","hidden","variant","onClick","disabled","trim","inline","color","_c2","$RefreshReg$"],"sources":["C:/praka/www/media/src/components/post/PostForm.tsx"],"sourcesContent":["import { useRef, useState } from 'react'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { useRootStore } from '../../stores/root.store'\r\nimport { Alert, Box, Button, Stack, TextField, Typography } from '@mui/material'\r\nimport Loader from '../loader/Loader'\r\n\r\nconst PostForm = observer(() => {\r\n  const { posts, auth } = useRootStore()\r\n  const [description, setDescription] = useState('')\r\n  const [imageUrl, setImageUrl] = useState<string | undefined>(undefined)\r\n  const [saving, setSaving] = useState(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n\r\n  const inputRef = useRef<HTMLInputElement>(null)\r\n\r\n  const pickFile = () => inputRef.current?.click()\r\n\r\n  const onFile = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0]\r\n    if (!file) return\r\n    const reader = new FileReader()\r\n    reader.onload = () => setImageUrl(reader.result as string)\r\n    reader.readAsDataURL(file)\r\n  }\r\n\r\n  const onSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    if (!auth.isAuthenticated) return\r\n    if (auth.user?.isBlocked) { setError('Ваш аккаунт заблокирован'); return }\r\n    setSaving(true); setError(null)\r\n    try {\r\n      await posts.createPost({ description, imageUrl })\r\n      setDescription('')\r\n      setImageUrl(undefined)\r\n    } catch (e: any) {\r\n      setError(e?.response?.data?.message || e?.message || 'Не удалось создать пост')\r\n    } finally {\r\n      setSaving(false)\r\n    }\r\n  }\r\n\r\n  if (!auth.isAuthenticated) {\r\n    return <Alert severity=\"info\">Чтобы создать пост, войдите в систему</Alert>\r\n  }\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={onSubmit}>\r\n      <Stack spacing={1.5}>\r\n        <TextField\r\n          multiline\r\n          minRows={2}\r\n          placeholder=\"Поделитесь чем-нибудь...\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          required\r\n        />\r\n\r\n        {imageUrl && (\r\n          <img src={imageUrl} alt=\"preview\" style={{ maxWidth: '100%', borderRadius: 12 }} />\r\n        )}\r\n\r\n        <Stack direction=\"row\" spacing={1}>\r\n          <input ref={inputRef} type=\"file\" accept=\"image/*\" hidden onChange={onFile} />\r\n          <Button variant=\"outlined\" onClick={pickFile}>Фото</Button>\r\n          <Button type=\"submit\" variant=\"contained\" disabled={saving || !description.trim()}>\r\n            {saving ? <Loader inline/> : 'Опубликовать'}\r\n          </Button>\r\n        </Stack>\r\n\r\n        {error && <Alert severity=\"error\">{error}</Alert>}\r\n        {auth.user?.isBlocked && <Typography color=\"error\">Ваш аккаунт заблокирован, публикация недоступна.</Typography>}\r\n      </Stack>\r\n    </Box>\r\n  )\r\n})\r\n\r\nexport default PostForm\r\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,YAAY,QAAQ,yBAAyB;AACtD,SAASC,KAAK,EAAEC,GAAG,EAAEC,MAAM,EAAEC,KAAK,EAAEC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AAChF,OAAOC,MAAM,MAAM,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,QAAQ,GAAAC,EAAA,CAAGZ,QAAQ,CAAAa,EAAA,GAAAD,EAAA,CAAC,MAAM;EAAA,IAAAE,WAAA;EAAAF,EAAA;EAC9B,MAAM;IAAEG,KAAK;IAAEC;EAAK,CAAC,GAAGf,YAAY,CAAC,CAAC;EACtC,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAqBsB,SAAS,CAAC;EACvE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACyB,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAgB,IAAI,CAAC;EAEvD,MAAM2B,QAAQ,GAAG5B,MAAM,CAAmB,IAAI,CAAC;EAE/C,MAAM6B,QAAQ,GAAGA,CAAA;IAAA,IAAAC,iBAAA;IAAA,QAAAA,iBAAA,GAAMF,QAAQ,CAACG,OAAO,cAAAD,iBAAA,uBAAhBA,iBAAA,CAAkBE,KAAK,CAAC,CAAC;EAAA;EAEhD,MAAMC,MAAM,GAAIC,CAAsC,IAAK;IAAA,IAAAC,eAAA;IACzD,MAAMC,IAAI,IAAAD,eAAA,GAAGD,CAAC,CAACG,MAAM,CAACC,KAAK,cAAAH,eAAA,uBAAdA,eAAA,CAAiB,CAAC,CAAC;IAChC,IAAI,CAACC,IAAI,EAAE;IACX,MAAMG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAG,MAAMnB,WAAW,CAACiB,MAAM,CAACG,MAAgB,CAAC;IAC1DH,MAAM,CAACI,aAAa,CAACP,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMQ,QAAQ,GAAG,MAAOV,CAAkB,IAAK;IAAA,IAAAW,UAAA;IAC7CX,CAAC,CAACY,cAAc,CAAC,CAAC;IAClB,IAAI,CAAC5B,IAAI,CAAC6B,eAAe,EAAE;IAC3B,KAAAF,UAAA,GAAI3B,IAAI,CAAC8B,IAAI,cAAAH,UAAA,eAATA,UAAA,CAAWI,SAAS,EAAE;MAAEtB,QAAQ,CAAC,0BAA0B,CAAC;MAAE;IAAO;IACzEF,SAAS,CAAC,IAAI,CAAC;IAAEE,QAAQ,CAAC,IAAI,CAAC;IAC/B,IAAI;MACF,MAAMV,KAAK,CAACiC,UAAU,CAAC;QAAE/B,WAAW;QAAEE;MAAS,CAAC,CAAC;MACjDD,cAAc,CAAC,EAAE,CAAC;MAClBE,WAAW,CAACC,SAAS,CAAC;IACxB,CAAC,CAAC,OAAOW,CAAM,EAAE;MAAA,IAAAiB,WAAA,EAAAC,gBAAA;MACfzB,QAAQ,CAAC,CAAAO,CAAC,aAADA,CAAC,wBAAAiB,WAAA,GAADjB,CAAC,CAAEmB,QAAQ,cAAAF,WAAA,wBAAAC,gBAAA,GAAXD,WAAA,CAAaG,IAAI,cAAAF,gBAAA,uBAAjBA,gBAAA,CAAmBG,OAAO,MAAIrB,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEqB,OAAO,KAAI,yBAAyB,CAAC;IACjF,CAAC,SAAS;MACR9B,SAAS,CAAC,KAAK,CAAC;IAClB;EACF,CAAC;EAED,IAAI,CAACP,IAAI,CAAC6B,eAAe,EAAE;IACzB,oBAAOnC,OAAA,CAACR,KAAK;MAACoD,QAAQ,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAqC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAC7E;EAEA,oBACEjD,OAAA,CAACP,GAAG;IAACyD,SAAS,EAAC,MAAM;IAAClB,QAAQ,EAAEA,QAAS;IAAAa,QAAA,eACvC7C,OAAA,CAACL,KAAK;MAACwD,OAAO,EAAE,GAAI;MAAAN,QAAA,gBAClB7C,OAAA,CAACJ,SAAS;QACRwD,SAAS;QACTC,OAAO,EAAE,CAAE;QACXC,WAAW,EAAC,yHAA0B;QACtCC,KAAK,EAAEhD,WAAY;QACnBiD,QAAQ,EAAGlC,CAAC,IAAKd,cAAc,CAACc,CAAC,CAACG,MAAM,CAAC8B,KAAK,CAAE;QAChDE,QAAQ;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,EAEDxC,QAAQ,iBACPT,OAAA;QAAK0D,GAAG,EAAEjD,QAAS;QAACkD,GAAG,EAAC,SAAS;QAACC,KAAK,EAAE;UAAEC,QAAQ,EAAE,MAAM;UAAEC,YAAY,EAAE;QAAG;MAAE;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACnF,eAEDjD,OAAA,CAACL,KAAK;QAACoE,SAAS,EAAC,KAAK;QAACZ,OAAO,EAAE,CAAE;QAAAN,QAAA,gBAChC7C,OAAA;UAAOgE,GAAG,EAAEhD,QAAS;UAACiD,IAAI,EAAC,MAAM;UAACC,MAAM,EAAC,SAAS;UAACC,MAAM;UAACX,QAAQ,EAAEnC;QAAO;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC9EjD,OAAA,CAACN,MAAM;UAAC0E,OAAO,EAAC,UAAU;UAACC,OAAO,EAAEpD,QAAS;UAAA4B,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC3DjD,OAAA,CAACN,MAAM;UAACuE,IAAI,EAAC,QAAQ;UAACG,OAAO,EAAC,WAAW;UAACE,QAAQ,EAAE1D,MAAM,IAAI,CAACL,WAAW,CAACgE,IAAI,CAAC,CAAE;UAAA1B,QAAA,EAC/EjC,MAAM,gBAAGZ,OAAA,CAACF,MAAM;YAAC0E,MAAM;UAAA;YAAA1B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,GAAG;QAAc;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,EAEPnC,KAAK,iBAAId,OAAA,CAACR,KAAK;QAACoD,QAAQ,EAAC,OAAO;QAAAC,QAAA,EAAE/B;MAAK;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAChD,EAAA7C,WAAA,GAAAE,IAAI,CAAC8B,IAAI,cAAAhC,WAAA,uBAATA,WAAA,CAAWiC,SAAS,kBAAIrC,OAAA,CAACH,UAAU;QAAC4E,KAAK,EAAC,OAAO;QAAA5B,QAAA,EAAC;MAAgD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3G;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;EAAA,QAnEyB1D,YAAY;AAAA,EAmErC,CAAC;EAAA,QAnEwBA,YAAY;AAAA,EAmEpC;AAAAmF,GAAA,GApEIzE,QAAQ;AAsEd,eAAeA,QAAQ;AAAA,IAAAE,EAAA,EAAAuE,GAAA;AAAAC,YAAA,CAAAxE,EAAA;AAAAwE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}