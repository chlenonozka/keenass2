{"ast":null,"code":"var _jsxFileName = \"C:\\\\praka\\\\www\\\\media\\\\src\\\\components\\\\post\\\\PostCard.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useCallback } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { useRootStore } from '../../stores/root.store';\nimport { DEFAULT_AVATAR } from '../../constants/ui';\nimport { Alert, Avatar, Box, Button, Card, CardContent, CardHeader, Divider, IconButton, Stack, TextField, Typography, Tooltip } from '@mui/material';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fmt = iso => new Date(iso).toLocaleString('ru-RU', {\n  year: 'numeric',\n  month: '2-digit',\n  day: '2-digit',\n  hour: '2-digit',\n  minute: '2-digit'\n});\nconst PostCard = _s(observer(_c = _s(({\n  post\n}) => {\n  var _auth$user, _auth$user4;\n  _s();\n  const {\n    posts,\n    auth\n  } = useRootStore();\n  const [showAll, setShowAll] = useState(false);\n  const [commentText, setCommentText] = useState('');\n  const [err, setErr] = useState(null);\n  const selfPost = ((_auth$user = auth.user) === null || _auth$user === void 0 ? void 0 : _auth$user.id) === post.authorId;\n  const canDeletePost = selfPost || auth.canModerate;\n\n  // Обновляем аватарку в посте и комментариях при загрузке ленты\n  const updateAvatarInPostAndComments = useCallback(() => {\n    console.log('Пост обновился:', post);\n    posts.refreshAvatarInCache(post.authorId, post.authorAvatarUrl || DEFAULT_AVATAR);\n  }, [post.authorId, post.authorAvatarUrl, posts]);\n\n  // Эта функция будет вызываться при переходе на вкладку \"Лента\"\n  useEffect(() => {\n    console.log('Переход на вкладку \"Лента\", обновляем аватарки для всех постов и комментариев');\n    posts.posts.forEach(p => {\n      if (p.authorId === post.authorId) {\n        updateAvatarInPostAndComments();\n      }\n    });\n  }, [posts.posts, updateAvatarInPostAndComments]);\n  useEffect(() => {\n    updateAvatarInPostAndComments(); // обновляем аватарку, если она изменилась\n  }, [post.authorAvatarUrl, updateAvatarInPostAndComments]);\n  useEffect(() => {\n    console.log('Ensuring comments preview for post id:', post.id);\n    posts.ensureCommentsPreview(post.id);\n  }, [post.id]);\n  useEffect(() => {\n    if (showAll && posts.comments(post.id).length === 0) {\n      console.log('Fetching comments for post id:', post.id);\n      posts.fetchComments(post.id).catch(() => {});\n    }\n  }, [showAll, post.id, posts]);\n  const onAddComment = async () => {\n    if (!commentText.trim()) return;\n    try {\n      console.log('Adding comment to post id:', post.id, 'with text:', commentText);\n      await posts.addComment(post.id, commentText.trim());\n      setCommentText('');\n    } catch (e) {\n      var _e$response, _e$response$data;\n      console.error('Failed to add comment:', e);\n      setErr((e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message) || (e === null || e === void 0 ? void 0 : e.message) || 'Не удалось добавить комментарий');\n    }\n  };\n  const all = posts.comments(post.id);\n  const preview = posts.commentsPreview(post.id);\n  const count = posts.commentsCount(post.id);\n  console.log('Rendering PostCard for post id:', post.id);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        src: post.authorAvatarUrl || DEFAULT_AVATAR,\n        alt: post.authorName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this),\n      title: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        children: post.authorName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 16\n      }, this),\n      subheader: fmt(post.createdAt),\n      action: canDeletePost && /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: selfPost ? 'Удалить мой пост' : 'Удалить пост',\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            color: \"error\",\n            disabled: posts.isPostProcessing(post.id),\n            onClick: () => {\n              console.log('Deleting post with id:', post.id);\n              posts.hardDeletePost(post.id);\n            },\n            children: /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [post.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.imageUrl,\n        alt: \"\",\n        style: {\n          maxWidth: '100%',\n          borderRadius: 12,\n          marginBottom: 12\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: post.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), !showAll && preview.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: [/*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            mb: 1.5\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), preview.map(c => {\n          var _auth$user2;\n          console.log('Rendering preview comment id:', c.id);\n          const selfComment = ((_auth$user2 = auth.user) === null || _auth$user2 === void 0 ? void 0 : _auth$user2.id) === c.userId; // Используем userId для комментариев\n          const canDeleteComment = selfComment || auth.canModerate;\n          return /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 1.25\n            },\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"row\",\n              spacing: 1,\n              alignItems: \"flex-start\",\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                src: c.authorAvatarUrl || DEFAULT_AVATAR,\n                alt: c.authorName,\n                sx: {\n                  width: 28,\n                  height: 28,\n                  mt: '2px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flex: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Stack, {\n                  direction: \"row\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    children: [c.authorName, \" \\xB7\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontWeight: 400,\n                        opacity: 0.8\n                      },\n                      children: fmt(c.createdAt)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 25\n                  }, this), canDeleteComment && /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: selfComment ? 'Удалить мой комментарий' : 'Удалить комментарий',\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        size: \"small\",\n                        color: \"error\",\n                        disabled: posts.isCommentProcessing(c.id),\n                        onClick: () => {\n                          console.log('Deleting comment with id:', c.id);\n                          posts.hardDeleteComment(post.id, c.id);\n                        },\n                        children: /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {\n                          fontSize: \"small\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 147,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 138,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  children: c.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this)\n          }, c.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 1,\n        mt: 1,\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          onClick: () => setShowAll(s => !s),\n          children: showAll ? 'Скрыть комментарии' : `Комментарии (${count})`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), showAll && /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: [/*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            mb: 1.5\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), all.map(c => {\n          var _auth$user3;\n          console.log('Rendering all comments for post id:', post.id);\n          const selfComment = ((_auth$user3 = auth.user) === null || _auth$user3 === void 0 ? void 0 : _auth$user3.id) === c.userId; // Используем userId для комментариев\n          const canDeleteComment = selfComment || auth.canModerate;\n          return /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 1.25\n            },\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"row\",\n              spacing: 1,\n              alignItems: \"flex-start\",\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                src: c.authorAvatarUrl || DEFAULT_AVATAR,\n                alt: c.authorName,\n                sx: {\n                  width: 28,\n                  height: 28,\n                  mt: '2px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flex: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Stack, {\n                  direction: \"row\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    children: [c.authorName, \" \\xB7\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontWeight: 400,\n                        opacity: 0.8\n                      },\n                      children: fmt(c.createdAt)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 25\n                  }, this), canDeleteComment && /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: selfComment ? 'Удалить мой комментарий' : 'Удалить комментарий',\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        size: \"small\",\n                        color: \"error\",\n                        disabled: posts.isCommentProcessing(c.id),\n                        onClick: () => {\n                          console.log('Deleting comment with id:', c.id);\n                          posts.hardDeleteComment(post.id, c.id);\n                        },\n                        children: /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {\n                          fontSize: \"small\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 201,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 192,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 191,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  children: c.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this)\n          }, c.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this);\n        }), auth.isAuthenticated && !((_auth$user4 = auth.user) !== null && _auth$user4 !== void 0 && _auth$user4.isBlocked) && /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          spacing: 1,\n          mt: 2,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            size: \"small\",\n            placeholder: \"\\u041D\\u0430\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439...\",\n            value: commentText,\n            onChange: e => setCommentText(e.target.value),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: onAddComment,\n            disabled: !commentText.trim(),\n            children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }, this), err && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mt: 1\n          },\n          children: err\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}, \"BroGC7Lhlg23ngL9dWkuGo1Wl5I=\", false, function () {\n  return [useRootStore];\n})), \"BroGC7Lhlg23ngL9dWkuGo1Wl5I=\", false, function () {\n  return [useRootStore];\n});\n_c2 = PostCard;\nexport default PostCard;\nvar _c, _c2;\n$RefreshReg$(_c, \"PostCard$observer\");\n$RefreshReg$(_c2, \"PostCard\");","map":{"version":3,"names":["useEffect","useState","useCallback","observer","useRootStore","DEFAULT_AVATAR","Alert","Avatar","Box","Button","Card","CardContent","CardHeader","Divider","IconButton","Stack","TextField","Typography","Tooltip","DeleteForeverIcon","jsxDEV","_jsxDEV","fmt","iso","Date","toLocaleString","year","month","day","hour","minute","PostCard","_s","_c","post","_auth$user","_auth$user4","posts","auth","showAll","setShowAll","commentText","setCommentText","err","setErr","selfPost","user","id","authorId","canDeletePost","canModerate","updateAvatarInPostAndComments","console","log","refreshAvatarInCache","authorAvatarUrl","forEach","p","ensureCommentsPreview","comments","length","fetchComments","catch","onAddComment","trim","addComment","e","_e$response","_e$response$data","error","response","data","message","all","preview","commentsPreview","count","commentsCount","children","avatar","src","alt","authorName","fileName","_jsxFileName","lineNumber","columnNumber","title","variant","subheader","createdAt","action","size","color","disabled","isPostProcessing","onClick","hardDeletePost","imageUrl","style","maxWidth","borderRadius","marginBottom","description","mt","sx","mb","map","c","_auth$user2","selfComment","userId","canDeleteComment","direction","spacing","alignItems","width","height","flex","justifyContent","fontWeight","opacity","isCommentProcessing","hardDeleteComment","fontSize","text","s","_auth$user3","isAuthenticated","isBlocked","placeholder","value","onChange","target","fullWidth","severity","_c2","$RefreshReg$"],"sources":["C:/praka/www/media/src/components/post/PostCard.tsx"],"sourcesContent":["import { useEffect, useState, useCallback } from 'react'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { useRootStore } from '../../stores/root.store'\r\nimport { DEFAULT_AVATAR } from '../../constants/ui'\r\nimport {\r\n  Alert, Avatar, Box, Button, Card, CardContent, CardHeader,\r\n  Divider, IconButton, Stack, TextField, Typography, Tooltip\r\n} from '@mui/material'\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever'\r\nimport type { Post } from '../../types'\r\n\r\nconst fmt = (iso: string) =>\r\n  new Date(iso).toLocaleString('ru-RU', {\r\n    year: 'numeric',\r\n    month: '2-digit',\r\n    day: '2-digit',\r\n    hour: '2-digit',\r\n    minute: '2-digit'\r\n  })\r\n\r\nconst PostCard = observer(({ post }: { post: Post }) => {\r\n  const { posts, auth } = useRootStore()\r\n  const [showAll, setShowAll] = useState(false)\r\n  const [commentText, setCommentText] = useState('')\r\n  const [err, setErr] = useState<string | null>(null)\r\n\r\n  const selfPost = auth.user?.id === post.authorId\r\n  const canDeletePost = selfPost || auth.canModerate\r\n\r\n  // Обновляем аватарку в посте и комментариях при загрузке ленты\r\n  const updateAvatarInPostAndComments = useCallback(() => {\r\n    console.log('Пост обновился:', post)\r\n    posts.refreshAvatarInCache(post.authorId, post.authorAvatarUrl || DEFAULT_AVATAR)\r\n  }, [post.authorId, post.authorAvatarUrl, posts])\r\n\r\n  // Эта функция будет вызываться при переходе на вкладку \"Лента\"\r\n  useEffect(() => {\r\n    console.log('Переход на вкладку \"Лента\", обновляем аватарки для всех постов и комментариев')\r\n    posts.posts.forEach(p => {\r\n      if (p.authorId === post.authorId) {\r\n        updateAvatarInPostAndComments()\r\n      }\r\n    })\r\n  }, [posts.posts, updateAvatarInPostAndComments])\r\n\r\n  useEffect(() => {\r\n    updateAvatarInPostAndComments()  // обновляем аватарку, если она изменилась\r\n  }, [post.authorAvatarUrl, updateAvatarInPostAndComments])\r\n\r\n  useEffect(() => {\r\n    console.log('Ensuring comments preview for post id:', post.id)\r\n    posts.ensureCommentsPreview(post.id)\r\n  }, [post.id])\r\n\r\n  useEffect(() => {\r\n    if (showAll && posts.comments(post.id).length === 0) {\r\n      console.log('Fetching comments for post id:', post.id)\r\n      posts.fetchComments(post.id).catch(() => {})\r\n    }\r\n  }, [showAll, post.id, posts])\r\n\r\n  const onAddComment = async () => {\r\n    if (!commentText.trim()) return\r\n    try {\r\n      console.log('Adding comment to post id:', post.id, 'with text:', commentText)\r\n      await posts.addComment(post.id, commentText.trim())\r\n      setCommentText('')\r\n    } catch (e: any) {\r\n      console.error('Failed to add comment:', e)\r\n      setErr(e?.response?.data?.message || e?.message || 'Не удалось добавить комментарий')\r\n    }\r\n  }\r\n\r\n  const all = posts.comments(post.id)\r\n  const preview = posts.commentsPreview(post.id)\r\n  const count = posts.commentsCount(post.id)\r\n\r\n  console.log('Rendering PostCard for post id:', post.id)\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        avatar={<Avatar src={post.authorAvatarUrl || DEFAULT_AVATAR} alt={post.authorName} />}\r\n        title={<Typography variant=\"subtitle1\">{post.authorName}</Typography>}\r\n        subheader={fmt(post.createdAt)}\r\n        action={canDeletePost && (\r\n          <Tooltip title={selfPost ? 'Удалить мой пост' : 'Удалить пост'}>\r\n            <span>\r\n              <IconButton\r\n                size=\"small\"\r\n                color=\"error\"\r\n                disabled={posts.isPostProcessing(post.id)}\r\n                onClick={() => {\r\n                  console.log('Deleting post with id:', post.id)\r\n                  posts.hardDeletePost(post.id)\r\n                }}\r\n              >\r\n                <DeleteForeverIcon />\r\n              </IconButton>\r\n            </span>\r\n          </Tooltip>\r\n        )}\r\n      />\r\n      <CardContent>\r\n        {post.imageUrl && (\r\n          <img\r\n            src={post.imageUrl}\r\n            alt=\"\"\r\n            style={{ maxWidth: '100%', borderRadius: 12, marginBottom: 12 }}\r\n          />\r\n        )}\r\n        <Typography>{post.description}</Typography>\r\n\r\n        {!showAll && preview.length > 0 && (\r\n          <Box mt={2}>\r\n            <Divider sx={{ mb: 1.5 }} />\r\n            {preview.map(c => {\r\n              console.log('Rendering preview comment id:', c.id)\r\n              const selfComment = auth.user?.id === c.userId // Используем userId для комментариев\r\n              const canDeleteComment = selfComment || auth.canModerate\r\n              return (\r\n                <Box key={c.id} sx={{ mb: 1.25 }}>\r\n                  <Stack direction=\"row\" spacing={1} alignItems=\"flex-start\">\r\n                    <Avatar\r\n                      src={c.authorAvatarUrl || DEFAULT_AVATAR}\r\n                      alt={c.authorName}\r\n                      sx={{ width: 28, height: 28, mt: '2px' }}\r\n                    />\r\n                    <Box sx={{ flex: 1 }}>\r\n                      <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                        <Typography variant=\"subtitle2\">\r\n                          {c.authorName} ·{' '}\r\n                          <span style={{ fontWeight: 400, opacity: 0.8 }}>{fmt(c.createdAt)}</span>\r\n                        </Typography>\r\n                        {canDeleteComment && (\r\n                          <Tooltip title={selfComment ? 'Удалить мой комментарий' : 'Удалить комментарий'}>\r\n                            <span>\r\n                              <IconButton\r\n                                size=\"small\"\r\n                                color=\"error\"\r\n                                disabled={posts.isCommentProcessing(c.id)}\r\n                                onClick={() => {\r\n                                  console.log('Deleting comment with id:', c.id)\r\n                                  posts.hardDeleteComment(post.id, c.id)\r\n                                }}\r\n                              >\r\n                                <DeleteForeverIcon fontSize=\"small\" />\r\n                              </IconButton>\r\n                            </span>\r\n                          </Tooltip>\r\n                        )}\r\n                      </Stack>\r\n                      <Typography>{c.text}</Typography>\r\n                    </Box>\r\n                  </Stack>\r\n                </Box>\r\n              )\r\n            })}\r\n          </Box>\r\n        )}\r\n\r\n        <Stack direction=\"row\" spacing={1} mt={1} alignItems=\"center\">\r\n          <Button size=\"small\" onClick={() => setShowAll(s => !s)}>\r\n            {showAll ? 'Скрыть комментарии' : `Комментарии (${count})`}\r\n          </Button>\r\n        </Stack>\r\n\r\n        {showAll && (\r\n          <Box mt={2}>\r\n            <Divider sx={{ mb: 1.5 }} />\r\n            {all.map(c => {\r\n              console.log('Rendering all comments for post id:', post.id)\r\n              const selfComment = auth.user?.id === c.userId // Используем userId для комментариев\r\n              const canDeleteComment = selfComment || auth.canModerate\r\n              return (\r\n                <Box key={c.id} sx={{ mb: 1.25 }}>\r\n                  <Stack direction=\"row\" spacing={1} alignItems=\"flex-start\">\r\n                    <Avatar\r\n                      src={c.authorAvatarUrl || DEFAULT_AVATAR}\r\n                      alt={c.authorName}\r\n                      sx={{ width: 28, height: 28, mt: '2px' }}\r\n                    />\r\n                    <Box sx={{ flex: 1 }}>\r\n                      <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                        <Typography variant=\"subtitle2\">\r\n                          {c.authorName} ·{' '}\r\n                          <span style={{ fontWeight: 400, opacity: 0.8 }}>{fmt(c.createdAt)}</span>\r\n                        </Typography>\r\n                        {canDeleteComment && (\r\n                          <Tooltip title={selfComment ? 'Удалить мой комментарий' : 'Удалить комментарий'}>\r\n                            <span>\r\n                              <IconButton\r\n                                size=\"small\"\r\n                                color=\"error\"\r\n                                disabled={posts.isCommentProcessing(c.id)}\r\n                                onClick={() => {\r\n                                  console.log('Deleting comment with id:', c.id)\r\n                                  posts.hardDeleteComment(post.id, c.id)\r\n                                }}\r\n                              >\r\n                                <DeleteForeverIcon fontSize=\"small\" />\r\n                              </IconButton>\r\n                            </span>\r\n                          </Tooltip>\r\n                        )}\r\n                      </Stack>\r\n                      <Typography>{c.text}</Typography>\r\n                    </Box>\r\n                  </Stack>\r\n                </Box>\r\n              )\r\n            })}\r\n            {auth.isAuthenticated && !auth.user?.isBlocked && (\r\n              <Stack direction=\"row\" spacing={1} mt={2}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  placeholder=\"Написать комментарий...\"\r\n                  value={commentText}\r\n                  onChange={(e) => setCommentText(e.target.value)}\r\n                  fullWidth\r\n                />\r\n                <Button variant=\"contained\" onClick={onAddComment} disabled={!commentText.trim()}>\r\n                  Отправить\r\n                </Button>\r\n              </Stack>\r\n            )}\r\n\r\n            {err && <Alert severity=\"error\" sx={{ mt: 1 }}>{err}</Alert>}\r\n          </Box>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n})\r\n\r\nexport default PostCard\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}