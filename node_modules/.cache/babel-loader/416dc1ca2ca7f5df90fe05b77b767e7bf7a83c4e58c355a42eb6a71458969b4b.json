{"ast":null,"code":"import { makeAutoObservable, runInAction } from 'mobx';\nimport http from '../api/http';\nexport class AuthStore {\n  constructor() {\n    this.user = null;\n    this.token = null;\n    this.isLoading = false;\n    this.initializing = true;\n    this.error = null;\n    makeAutoObservable(this);\n    this.hydrate();\n  }\n  get isAuthenticated() {\n    return !!this.token && !!this.user;\n  }\n  get isAdmin() {\n    var _this$user;\n    return ((_this$user = this.user) === null || _this$user === void 0 ? void 0 : _this$user.role) === 'admin';\n  }\n  hydrate() {\n    const token = localStorage.getItem('token');\n    const userRaw = localStorage.getItem('user');\n    if (token && userRaw) {\n      this.token = token;\n      this.user = JSON.parse(userRaw);\n    }\n    this.initializing = false;\n  }\n  async login(dto) {\n    this.isLoading = true;\n    this.error = null;\n    try {\n      const {\n        data\n      } = await http.post('/auth/login', dto);\n      runInAction(() => {\n        this.token = data.token;\n        this.user = data.user;\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('user', JSON.stringify(data.user));\n      });\n    } catch (e) {\n      runInAction(() => {\n        var _e$response, _e$response$data;\n        this.error = (e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message) || 'Ошибка входа';\n      });\n      throw e;\n    } finally {\n      runInAction(() => this.isLoading = false);\n    }\n  }\n  async register(dto) {\n    this.isLoading = true;\n    this.error = null;\n    try {\n      const {\n        data\n      } = await http.post('/register', dto);\n      runInAction(() => {\n        this.token = data.token;\n        this.user = data.user;\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('user', JSON.stringify(data.user));\n      });\n    } catch (e) {\n      runInAction(() => {\n        var _e$response2, _e$response2$data;\n        this.error = (e === null || e === void 0 ? void 0 : (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.message) || 'Ошибка регистрации';\n      });\n      throw e;\n    } finally {\n      runInAction(() => this.isLoading = false);\n    }\n  }\n  logout() {\n    this.token = null;\n    this.user = null;\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  }\n}","map":{"version":3,"names":["makeAutoObservable","runInAction","http","AuthStore","constructor","user","token","isLoading","initializing","error","hydrate","isAuthenticated","isAdmin","_this$user","role","localStorage","getItem","userRaw","JSON","parse","login","dto","data","post","setItem","stringify","e","_e$response","_e$response$data","response","message","register","_e$response2","_e$response2$data","logout","removeItem"],"sources":["C:/praka/www/media/src/stores/auth.store.ts"],"sourcesContent":["import { makeAutoObservable, runInAction } from 'mobx'\r\nimport http from '../api/http'\r\nimport type { CredentialsDTO, RegisterDTO, User } from '../types'\r\n\r\nexport class AuthStore {\r\n  user: User | null = null\r\n  token: string | null = null\r\n  isLoading = false\r\n  initializing = true\r\n  error: string | null = null\r\n\r\n  constructor() {\r\n    makeAutoObservable(this)\r\n    this.hydrate()\r\n  }\r\n\r\n  get isAuthenticated() {\r\n    return !!this.token && !!this.user\r\n  }\r\n\r\n  get isAdmin() {\r\n    return this.user?.role === 'admin'\r\n  }\r\n\r\n  hydrate() {\r\n    const token = localStorage.getItem('token')\r\n    const userRaw = localStorage.getItem('user')\r\n    if (token && userRaw) {\r\n      this.token = token\r\n      this.user = JSON.parse(userRaw)\r\n    }\r\n    this.initializing = false\r\n  }\r\n\r\n  async login(dto: CredentialsDTO) {\r\n    this.isLoading = true\r\n    this.error = null\r\n    try {\r\n      const { data } = await http.post<{ token: string; user: User }>('/auth/login', dto)\r\n      runInAction(() => {\r\n        this.token = data.token\r\n        this.user = data.user\r\n        localStorage.setItem('token', data.token)\r\n        localStorage.setItem('user', JSON.stringify(data.user))\r\n      })\r\n    } catch (e: any) {\r\n      runInAction(() => {\r\n        this.error = e?.response?.data?.message || 'Ошибка входа'\r\n      })\r\n      throw e\r\n    } finally {\r\n      runInAction(() => (this.isLoading = false))\r\n    }\r\n  }\r\n\r\n  async register(dto: RegisterDTO) {\r\n    this.isLoading = true\r\n    this.error = null\r\n    try {\r\n      const { data } = await http.post<{ token: string; user: User }>('/register', dto)\r\n      runInAction(() => {\r\n        this.token = data.token\r\n        this.user = data.user\r\n        localStorage.setItem('token', data.token)\r\n        localStorage.setItem('user', JSON.stringify(data.user))\r\n      })\r\n    } catch (e: any) {\r\n      runInAction(() => {\r\n        this.error = e?.response?.data?.message || 'Ошибка регистрации'\r\n      })\r\n      throw e\r\n    } finally {\r\n      runInAction(() => (this.isLoading = false))\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.token = null\r\n    this.user = null\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('user')\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}