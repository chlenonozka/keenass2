{"ast":null,"code":"import axios from 'axios';\nconst http = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL\n});\nhttp.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    var _config$headers;\n    config.headers = (_config$headers = config.headers) !== null && _config$headers !== void 0 ? _config$headers : {};\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nhttp.interceptors.response.use(r => r, err => {\n  var _err$response;\n  if ((err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  }\n  return Promise.reject(err);\n});\nexport default http;\n\n// Ожидаемые эндпоинты Mokky (можешь скорректировать под свой проект):\n// POST /auth/register  {name,email,password} -> {token,user}\n// POST /auth/login     {email,password}     -> {token,user}\n// GET  /users                               -> User[]\n// PATCH /users/:id      {isBlocked:boolean} -> User","map":{"version":3,"names":["axios","http","create","baseURL","process","env","REACT_APP_API_BASE_URL","interceptors","request","use","config","token","localStorage","getItem","_config$headers","headers","Authorization","response","r","err","_err$response","status","removeItem","Promise","reject"],"sources":["C:/praka/www/media/src/api/http.ts"],"sourcesContent":["import axios from 'axios'\r\n\r\nconst http = axios.create({\r\n  baseURL: process.env.REACT_APP_API_BASE_URL\r\n})\r\n\r\nhttp.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token')\r\n  if (token) {\r\n    config.headers = config.headers ?? {}\r\n    config.headers.Authorization = `Bearer ${token}`\r\n  }\r\n  return config\r\n})\r\n\r\nhttp.interceptors.response.use(\r\n  (r) => r,\r\n  (err) => {\r\n    if (err?.response?.status === 401) {\r\n      localStorage.removeItem('token')\r\n      localStorage.removeItem('user')\r\n    }\r\n    return Promise.reject(err)\r\n  }\r\n)\r\n\r\nexport default http\r\n\r\n// Ожидаемые эндпоинты Mokky (можешь скорректировать под свой проект):\r\n// POST /auth/register  {name,email,password} -> {token,user}\r\n// POST /auth/login     {email,password}     -> {token,user}\r\n// GET  /users                               -> User[]\r\n// PATCH /users/:id      {isBlocked:boolean} -> User\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAAC;EACxBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC;AACvB,CAAC,CAAC;AAEFL,IAAI,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACxC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IAAA,IAAAG,eAAA;IACTJ,MAAM,CAACK,OAAO,IAAAD,eAAA,GAAGJ,MAAM,CAACK,OAAO,cAAAD,eAAA,cAAAA,eAAA,GAAI,CAAC,CAAC;IACrCJ,MAAM,CAACK,OAAO,CAACC,aAAa,GAAG,UAAUL,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEFT,IAAI,CAACM,YAAY,CAACU,QAAQ,CAACR,GAAG,CAC3BS,CAAC,IAAKA,CAAC,EACPC,GAAG,IAAK;EAAA,IAAAC,aAAA;EACP,IAAI,CAAAD,GAAG,aAAHA,GAAG,wBAAAC,aAAA,GAAHD,GAAG,CAAEF,QAAQ,cAAAG,aAAA,uBAAbA,aAAA,CAAeC,MAAM,MAAK,GAAG,EAAE;IACjCT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;IAChCV,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC;EACjC;EACA,OAAOC,OAAO,CAACC,MAAM,CAACL,GAAG,CAAC;AAC5B,CACF,CAAC;AAED,eAAelB,IAAI;;AAEnB;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}