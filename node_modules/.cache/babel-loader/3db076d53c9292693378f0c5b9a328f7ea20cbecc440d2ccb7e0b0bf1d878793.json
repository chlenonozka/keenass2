{"ast":null,"code":"import { makeAutoObservable, runInAction } from 'mobx';\nimport http from '../api/http';\nexport class AuthStore {\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n    this.user = null;\n    this.token = null;\n    this.isLoading = false;\n    this.initializing = true;\n    this.error = null;\n    makeAutoObservable(this);\n    this.hydrate();\n  }\n  get isAuthenticated() {\n    return !!this.token && !!this.user;\n  }\n  get isAdmin() {\n    var _this$user;\n    const r = (_this$user = this.user) === null || _this$user === void 0 ? void 0 : _this$user.role;\n    return typeof r === 'string' && r.toLowerCase().trim() === 'admin';\n  }\n  hydrate() {\n    const token = localStorage.getItem('token');\n    const raw = localStorage.getItem('user');\n    this.token = token !== null && token !== void 0 ? token : null;\n    if (raw && raw !== 'undefined' && raw !== 'null') {\n      try {\n        this.user = JSON.parse(raw);\n      } catch {\n        localStorage.removeItem('user');\n        this.user = null;\n      }\n    } else {\n      if (raw) localStorage.removeItem('user');\n      this.user = null;\n    }\n    this.initializing = false;\n    if (this.token && !this.user) {\n      this.fetchMe().then(u => {\n        if (u) {\n          runInAction(() => {\n            this.user = u;\n            localStorage.setItem('user', JSON.stringify(u));\n          });\n        }\n      }).catch(() => {});\n    }\n  }\n  async login(dto) {\n    this.isLoading = true;\n    this.error = null;\n    try {\n      var _ref, _data$token, _ref2, _data$user, _user;\n      const {\n        data\n      } = await http.post('/auth', dto);\n      const token = (_ref = (_data$token = data === null || data === void 0 ? void 0 : data.token) !== null && _data$token !== void 0 ? _data$token : data === null || data === void 0 ? void 0 : data.accessToken) !== null && _ref !== void 0 ? _ref : data === null || data === void 0 ? void 0 : data.jwt;\n      if (!token) throw new Error('Сервер не вернул токен');\n      runInAction(() => {\n        this.token = token;\n        localStorage.setItem('token', token);\n      });\n      let user = (_ref2 = (_data$user = data === null || data === void 0 ? void 0 : data.user) !== null && _data$user !== void 0 ? _data$user : data === null || data === void 0 ? void 0 : data.profile) !== null && _ref2 !== void 0 ? _ref2 : null;\n      if (!user) {\n        user = await this.fetchMe();\n      }\n      if ((_user = user) !== null && _user !== void 0 && _user.isBlocked) {\n        this.logout();\n        throw new Error('Пользователь заблокирован');\n      }\n      runInAction(() => {\n        var _user2;\n        this.user = (_user2 = user) !== null && _user2 !== void 0 ? _user2 : null;\n        if (user) localStorage.setItem('user', JSON.stringify(user));else localStorage.removeItem('user');\n      });\n    } catch (e) {\n      runInAction(() => {\n        var _e$response, _e$response$data;\n        this.error = (e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message) || (e === null || e === void 0 ? void 0 : e.message) || 'Ошибка входа';\n      });\n      throw e;\n    } finally {\n      runInAction(() => this.isLoading = false);\n    }\n  }\n  async fetchMe() {\n    try {\n      var _data$user2;\n      const {\n        data\n      } = await http.get('/auth_me');\n      const user = (_data$user2 = data === null || data === void 0 ? void 0 : data.user) !== null && _data$user2 !== void 0 ? _data$user2 : data;\n      return user && user.id != null ? user : null;\n    } catch (e) {\n      var _e$response2;\n      const code = e === null || e === void 0 ? void 0 : (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : _e$response2.status;\n      if (code === 401) {\n        this.logout();\n      }\n      return null;\n    }\n  }\n  async register(dto) {\n    this.isLoading = true;\n    this.error = null;\n    try {\n      const {\n        data\n      } = await http.post('/register', dto);\n      runInAction(() => {\n        this.token = data.token;\n        this.user = data.user;\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('user', JSON.stringify(data.user));\n      });\n    } catch (e) {\n      runInAction(() => {\n        var _e$response3, _e$response3$data;\n        this.error = (e === null || e === void 0 ? void 0 : (_e$response3 = e.response) === null || _e$response3 === void 0 ? void 0 : (_e$response3$data = _e$response3.data) === null || _e$response3$data === void 0 ? void 0 : _e$response3$data.message) || 'Ошибка регистрации';\n      });\n      throw e;\n    } finally {\n      runInAction(() => this.isLoading = false);\n    }\n  }\n  async updateMe(update) {\n    if (!this.user) throw new Error('Нет пользователя');\n    const id = this.user.id;\n    const payload = {\n      ...update\n    };\n    const {\n      data\n    } = await http.patch(`/users/${id}`, payload);\n    runInAction(() => {\n      this.user = data;\n      localStorage.setItem('user', JSON.stringify(data));\n    });\n    return data;\n  }\n  async uploadAvatar(file) {\n    var _data$data;\n    const fd = new FormData();\n    fd.append('file', file);\n    const {\n      data\n    } = await http.post('/uploads', fd, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    const item = Array.isArray(data) ? data[0] : (_data$data = data === null || data === void 0 ? void 0 : data.data) !== null && _data$data !== void 0 ? _data$data : data;\n    const url = (item === null || item === void 0 ? void 0 : item.url) || (item === null || item === void 0 ? void 0 : item.path) || (item === null || item === void 0 ? void 0 : item.src);\n    if (!url) throw new Error('Сервер не вернул ссылку на файл');\n    const clean = String(url).split('?')[0].split('#')[0];\n    const name = clean.substring(clean.lastIndexOf('/') + 1);\n    return {\n      url,\n      name\n    };\n  }\n  async changeAvatar(file) {\n    const {\n      url,\n      name\n    } = await this.uploadAvatar(file);\n    await this.updateMe({\n      avatarUrl: url,\n      avatarName: name\n    });\n    return {\n      url,\n      name\n    };\n  }\n  async removeAvatar() {\n    if (!this.user) return;\n    const avatarUrl = this.user.avatarUrl;\n    if (!avatarUrl) {\n      console.error('Не найден аватар для удаления');\n      return;\n    }\n    console.log('URL аватара пользователя:', avatarUrl);\n    try {\n      console.log('Отправляем запрос на сервер с параметром:', {\n        url: avatarUrl\n      });\n      const {\n        data\n      } = await http.get('/uploads', {\n        params: {\n          url: avatarUrl\n        }\n      });\n      console.log('Ответ от сервера:', data);\n      const imageId = data.length > 0 ? data[0].id : undefined;\n      console.log('URL, полученный от загрузок:', avatarUrl);\n      console.log('ID изображения из загрузок:', imageId);\n      if (imageId) {\n        await http.delete(`/uploads/${imageId}`);\n        console.log('Аватар успешно удален');\n      } else {\n        console.error('Не удалось найти ID изображения');\n      }\n    } catch (error) {\n      console.error('Ошибка при удалении аватара:', error);\n    }\n    await this.updateMe({\n      avatarUrl: '',\n      avatarName: ''\n    });\n  }\n  get canModerate() {\n    var _this$user2;\n    const r = (_this$user2 = this.user) === null || _this$user2 === void 0 ? void 0 : _this$user2.role;\n    const role = typeof r === 'string' ? r.toLowerCase().trim() : '';\n    return role === 'admin' || role === 'moderator';\n  }\n  logout() {\n    this.token = null;\n    this.user = null;\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  }\n}","map":{"version":3,"names":["makeAutoObservable","runInAction","http","AuthStore","constructor","rootStore","user","token","isLoading","initializing","error","hydrate","isAuthenticated","isAdmin","_this$user","r","role","toLowerCase","trim","localStorage","getItem","raw","JSON","parse","removeItem","fetchMe","then","u","setItem","stringify","catch","login","dto","_ref","_data$token","_ref2","_data$user","_user","data","post","accessToken","jwt","Error","profile","isBlocked","logout","_user2","e","_e$response","_e$response$data","response","message","_data$user2","get","id","_e$response2","code","status","register","_e$response3","_e$response3$data","updateMe","update","payload","patch","uploadAvatar","file","_data$data","fd","FormData","append","headers","item","Array","isArray","url","path","src","clean","String","split","name","substring","lastIndexOf","changeAvatar","avatarUrl","avatarName","removeAvatar","console","log","params","imageId","length","undefined","delete","canModerate","_this$user2"],"sources":["C:/praka/www/media/src/stores/auth.store.ts"],"sourcesContent":["import { makeAutoObservable, runInAction } from 'mobx'\r\nimport http from '../api/http'\r\nimport type { CredentialsDTO, RegisterDTO, User } from '../types'\r\nimport type { RootStore } from './root.store'\r\n\r\nexport class AuthStore {\r\n  user: User | null = null\r\n  token: string | null = null\r\n  isLoading = false\r\n  initializing = true\r\n  error: string | null = null\r\n\r\n  constructor(private rootStore: RootStore) {\r\n    makeAutoObservable(this)\r\n    this.hydrate()\r\n  }\r\n\r\n  get isAuthenticated() { return !!this.token && !!this.user }\r\n  get isAdmin() {\r\n    const r = this.user?.role\r\n    return typeof r === 'string' && r.toLowerCase().trim() === 'admin'\r\n  }\r\n\r\n  hydrate() {\r\n    const token = localStorage.getItem('token')\r\n    const raw = localStorage.getItem('user')\r\n\r\n    this.token = token ?? null\r\n\r\n    if (raw && raw !== 'undefined' && raw !== 'null') {\r\n      try { this.user = JSON.parse(raw) }\r\n      catch { localStorage.removeItem('user'); this.user = null }\r\n    } else {\r\n      if (raw) localStorage.removeItem('user')\r\n      this.user = null\r\n    }\r\n\r\n    this.initializing = false\r\n    if (this.token && !this.user) {\r\n      this.fetchMe().then(u => {\r\n        if (u) {\r\n          runInAction(() => {\r\n            this.user = u\r\n            localStorage.setItem('user', JSON.stringify(u))\r\n          })\r\n        }\r\n      }).catch(() => {})\r\n    }\r\n  }\r\n\r\n  async login(dto: CredentialsDTO) {\r\n    this.isLoading = true\r\n    this.error = null\r\n    try {\r\n      const { data } = await http.post<any>('/auth', dto)\r\n      const token: string | undefined = data?.token ?? data?.accessToken ?? data?.jwt\r\n      if (!token) throw new Error('Сервер не вернул токен')\r\n\r\n      runInAction(() => {\r\n        this.token = token\r\n        localStorage.setItem('token', token)\r\n      })\r\n      \r\n      let user: User | null | undefined = data?.user ?? data?.profile ?? null\r\n      if (!user) {\r\n        user = await this.fetchMe()\r\n      }\r\n      if (user?.isBlocked) {\r\n        this.logout()\r\n        throw new Error('Пользователь заблокирован')\r\n      }\r\n\r\n      runInAction(() => {\r\n        this.user = user ?? null\r\n        if (user) localStorage.setItem('user', JSON.stringify(user))\r\n        else localStorage.removeItem('user')\r\n      })\r\n    } catch (e: any) {\r\n      runInAction(() => {\r\n        this.error = e?.response?.data?.message || e?.message || 'Ошибка входа'\r\n      })\r\n      throw e\r\n    } finally {\r\n      runInAction(() => (this.isLoading = false))\r\n    }\r\n  }\r\n\r\n  async fetchMe(): Promise<User | null> {\r\n    try {\r\n      const { data } = await http.get<any>('/auth_me')\r\n      const user: User = data?.user ?? data\r\n      return (user && user.id != null) ? user : null\r\n    } catch (e: any) {\r\n      const code = e?.response?.status\r\n      if (code === 401) {\r\n        this.logout()\r\n      }\r\n      return null\r\n    }\r\n  }\r\n\r\n  async register(dto: RegisterDTO) {\r\n    this.isLoading = true\r\n    this.error = null\r\n    try {\r\n      const { data } = await http.post<{ token: string; user: User }>('/register', dto)\r\n      runInAction(() => {\r\n        this.token = data.token\r\n        this.user = data.user\r\n        localStorage.setItem('token', data.token)\r\n        localStorage.setItem('user', JSON.stringify(data.user))\r\n      })\r\n    } catch (e: any) {\r\n      runInAction(() => {\r\n        this.error = e?.response?.data?.message || 'Ошибка регистрации'\r\n      })\r\n      throw e\r\n    } finally {\r\n      runInAction(() => (this.isLoading = false))\r\n    }\r\n  }\r\n\r\n  async updateMe(update: Partial<Pick<User, 'name' | 'avatarUrl' | 'avatarName'>>) {\r\n    if (!this.user) throw new Error('Нет пользователя')\r\n    const id = this.user.id\r\n    const payload = { ...update }\r\n    const { data } = await http.patch<User>(`/users/${id}`, payload)\r\n    runInAction(() => {\r\n      this.user = data  \r\n      localStorage.setItem('user', JSON.stringify(data))  \r\n    })\r\n    return data\r\n  }\r\n\r\n  async uploadAvatar(file: File): Promise<{ url: string; name: string }> {\r\n    const fd = new FormData()\r\n    fd.append('file', file)\r\n    const { data } = await http.post<any>('/uploads', fd, {\r\n      headers: { 'Content-Type': 'multipart/form-data' },\r\n    })\r\n    const item = Array.isArray(data) ? data[0] : (data?.data ?? data)\r\n    const url: string = item?.url || item?.path || item?.src\r\n    if (!url) throw new Error('Сервер не вернул ссылку на файл')\r\n    const clean = String(url).split('?')[0].split('#')[0]\r\n    const name = clean.substring(clean.lastIndexOf('/') + 1)\r\n    return { url, name }\r\n  }\r\n\r\n  async changeAvatar(file: File): Promise<{ url: string; name: string }> {\r\n    const { url, name } = await this.uploadAvatar(file) \r\n    await this.updateMe({ avatarUrl: url, avatarName: name })  \r\n    return { url, name }\r\n  }\r\n  \r\n  async removeAvatar() {\r\n    if (!this.user) return;\r\n\r\n    const avatarUrl = this.user.avatarUrl;\r\n\r\n    if (!avatarUrl) {\r\n      console.error('Не найден аватар для удаления');\r\n      return;\r\n    }\r\n\r\n    console.log('URL аватара пользователя:', avatarUrl);\r\n\r\n    try {\r\n      console.log('Отправляем запрос на сервер с параметром:', { url: avatarUrl });\r\n\r\n      const { data } = await http.get<any[]>('/uploads', {\r\n        params: { url: avatarUrl } \r\n      });\r\n\r\n      console.log('Ответ от сервера:', data);\r\n\r\n      const imageId = data.length > 0 ? data[0].id : undefined;\r\n\r\n      console.log('URL, полученный от загрузок:', avatarUrl);\r\n      console.log('ID изображения из загрузок:', imageId);\r\n\r\n      if (imageId) {\r\n        await http.delete(`/uploads/${imageId}`);\r\n        console.log('Аватар успешно удален');\r\n      } else {\r\n        console.error('Не удалось найти ID изображения');\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при удалении аватара:', error);\r\n    }\r\n\r\n    await this.updateMe({ avatarUrl: '', avatarName: '' });\r\n  }\r\n\r\n  get canModerate() {\r\n    const r = this.user?.role\r\n    const role = typeof r === 'string' ? r.toLowerCase().trim() : ''\r\n    return role === 'admin' || role === 'moderator'\r\n  }\r\n\r\n  logout() {\r\n    this.token = null\r\n    this.user = null\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('user')\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}